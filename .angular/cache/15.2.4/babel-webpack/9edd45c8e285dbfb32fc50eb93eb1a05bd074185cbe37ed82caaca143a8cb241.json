{"ast":null,"code":"import _asyncToGenerator from \"D:/Puntos_de_CyL/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport Swal from 'sweetalert2';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./map.service\";\nimport * as i3 from \"src/app/auth/services/auth.service\";\nimport * as i4 from \"../api\";\nexport let MapDataService = /*#__PURE__*/(() => {\n  class MapDataService {\n    get isUserLocationReady() {\n      return !!this.userLocation;\n    }\n    get puntos() {\n      return this._puntos;\n    }\n    get usuario() {\n      return this._usuario;\n    }\n    get favPoints() {\n      return this._favPoints;\n    }\n    get puntosFavoritos() {\n      return this._usuario?.recordid;\n    }\n    constructor(http, mapService, authService, dac) {\n      this.http = http;\n      this.mapService = mapService;\n      this.authService = authService;\n      this.dac = dac;\n      this._baseUrl = environment.jcylUrl;\n      this.isLoadingPuntos = false;\n      this.datosCargados = false;\n      this.getUserLocation();\n      this.getPuntos().subscribe(puntos => {\n        this._puntos = puntos.records;\n      });\n      this.authService.usuario.subscribe(usuario => {\n        this._usuario = usuario;\n        this._favPoints = usuario.recordid;\n      });\n    }\n    getUserLocation() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        return new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition(({\n            coords\n          }) => {\n            _this.userLocation = [coords.longitude, coords.latitude];\n            /* console.log( coords ) */\n            _this.mapService.setUserLocation([coords.latitude, coords.longitude]);\n            resolve(_this.userLocation);\n          }, err => {\n            Swal.fire(\"Error\", \"No se pudo obtener la geolocalización\", \"error\");\n            console.log(err);\n            reject();\n          });\n        });\n      })();\n    }\n    getPuntos() {\n      return this.http.get(this._baseUrl);\n    }\n    getPuntosBy(busqueda, field) {\n      this.isLoadingPuntos = true;\n      this.http.get(`${this._baseUrl}&refine.${field}=${busqueda}`).subscribe(puntos => {\n        this.actualizarPuntos(puntos.records);\n        this.mapService.generarMarkers(this._puntos, this.userLocation);\n      });\n    }\n    getFavPoints() {\n      this.isLoadingPuntos = true;\n      this._puntos = [];\n      this._favPoints?.forEach(id => {\n        this.http.get(`${this._baseUrl}&refine.recordid=${id}`).subscribe(punto => {\n          this._puntos.push(punto.records[0]);\n        });\n      });\n      this.actualizarPuntos(this._puntos);\n      this.mapService.generarMarkers(this._puntos, this.userLocation);\n      /* .subscribe( ( puntos ) => {\r\n          this.actualizarPuntos( puntos.records );\r\n          this.mapService.generarMarkers( this._puntos, this.userLocation! );\r\n        }) */\n    }\n    /* usuarioLogeado() {\r\n          this.authService.validarToken()\r\n        .subscribe( resp => {\r\n          console.log( resp )\r\n        })\r\n    } */\n    /* getDirectionRoute(start: [number, number], end: [number, number]) {\r\n      return this.dac.get<DirectionsResponse>(`/${ start.join(\"%2C\") }%3B${ end.join(\"%2C\") }`);\r\n    } */\n    actualizarPuntos(puntos) {\n      this.mapService.borrarRuta();\n      this._puntos = puntos;\n      this.isLoadingPuntos = false;\n    }\n  }\n  MapDataService.ɵfac = function MapDataService_Factory(t) {\n    return new (t || MapDataService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MapService), i0.ɵɵinject(i3.AuthService), i0.ɵɵinject(i4.DirectionsApiClient));\n  };\n  MapDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MapDataService,\n    factory: MapDataService.ɵfac,\n    providedIn: 'root'\n  });\n  return MapDataService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}